# На вход программа получает набор чисел, заканчивающихся решеткой.
# Вам требуется найти: среднее, максимальное и минимальное число в последовательности.
# Так же нужно вывести cумму остатков от деления суммы троек на
# последнее число тройки (каждые 3 введеных числа образуют тройку).
# Для понимания рассмотрим пример входных данных: 1 2 3 4 5 6 среднее: (1 + 2 + 3 + 4 + 5 + 6) / 6 = 3.5
# максимум: 6 минимум: 1 сумма остатков троек: (1 + 2 + 3) mod 3 + (4 + 5 + 6) mod 6 = 6 mod 3 + 15 mod 6 = 0 + 3 = 3
# Среднее выводить, округлив до трех знаков после запятой. Для этого нужно использовать функцию round(x, 3)
# Того ваша программа должна вывести: 3.5 6 1 3
# Подумайте, имеет ли смысл хранить всю последовательность.
# Формат входных данных
# Последовательность чисел, заканчивающися '#'.
# Все числа от 1 до 100. Количество чисел в последовательности кратно трем. Одно число на строку.
# Формат выходных данных
# Четыре числа, разделенных пробелом


A = []
k, j = 0, 0
while True:
    try:
        c = input().split(' ')
        if c.__len__() > 1:
            for num in c:
                A.append(int(num))
            break
        else:
            for num in c:
                A.append(int(num))
    except:
        break

for i in range(len(A)):
    k += A[i]
c = round(k / len(A), 3)

if len(A) % 3 == 0:
    for i in range(0, len(A), 3):
        m = (A[i] + A[i + 1] + A[i + 2]) % A[i + 2]
        j += m
elif len(A) % 3 == 1:
    for i in range(0, (len(A) - 1), 3):
        m = (A[i] + A[i + 1] + A[i + 2]) % A[i + 2]
        j += m
else:
    for i in range(0, (len(A) - 2), 3):
        m = (A[i] + A[i + 1] + A[i + 2]) % A[i + 2]
        j += m

print(c, max(A), min(A), j)
