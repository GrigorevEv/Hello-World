# I-B-функция
# Зафиксируем строку L.
# Будем называть её подстроку K особенной, если у неё есть как минимум три различных вхождения в L,
# среди которых префикс и суффикс строки L.
# Пусть теперь дана строка S, состоящая из N символов.
# Пусть B(i) - длина максимальной особенной подстроки у строки, образованной первыми i символами S.
# Напишите программу, которая вычислит значения функции B
# для заданной строчки для всех возможных значений i от 1 до N (нумерация от 1).
# Формат входных данных
# В единственной строке записана строка, состоящая только из больших и/или маленьких латинских букв.
# Длина строки 1 <= N <= 200000.
# Формат выходных данных
# В выходной файл выведите N чисел — значения функции B(1), B(2), … B(N).


# 1. Нужно подсчитать длины всех подстрок строки s совпадающих с префиксом этой строки
# 2. Выбрать из них максимальную по длине, которая имеет минимум три вхождения в строку s


def p_func(s):
    n = len(s)
    pi = [0] * n
    A = []
    for i in range(1, n):
        j = pi[i-1]
        while j > 0 and s[i] != s[j]:
            j = pi[j-1]
        if s[i] == s[j]:
            j += 1
            pi[i] = j
    for i in range(len(pi)):
        print(s.count(s[0:i]))
        if s.count(s[0:i]) >= 3:
            A.append(i)
        else:
            A.append(0)
    return pi, A


print(p_func('abacabacabacaba'))